{
  "uid" : "ae0afb2d4f79d7c2",
  "name" : "User pays a single payment as PO type with two transfer and no stamp",
  "fullName" : "User pays a single payment without stamps via nodoInviaRPT: User pays a single payment as PO type with two transfer and no stamp",
  "historyId" : "9fe7c98c3542fab0a8bf8a36868f5b00",
  "time" : {
    "start" : 1750404202473,
    "stop" : 1750404203774,
    "duration" : 1301
  },
  "status" : "broken",
  "statusMessage" : "xml.etree.ElementTree.ParseError: not well-formed (invalid token): line 1, column 0\n",
  "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/behave/model.py\", line 1329, in run\n    match.run(runner.context)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/behave/matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"src/bdd/wisp/steps/steps.py\", line 170, in user_fail_to_pay_RPT\n    steputils.send_primitive(context, actor, 'nodoInviaRPT')\n    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/pagopa-platform-integration-test/pagopa-platform-integration-test/src/utility/wisp/steps_utils.py\", line 42, in send_primitive\n    status_code, body_response, _ = utils.execute_request(url, 'post', headers, request, content_type,\n                                    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n                                                          description=req_description)\n                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/pagopa-platform-integration-test/pagopa-platform-integration-test/src/utility/wisp/utils.py\", line 38, in execute_request\n    object_response = xmlutils.fromstring(formatted_response)\n  File \"/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/xml/etree/ElementTree.py\", line 1342, in XML\n    parser.feed(text)\n    ~~~~~~~~~~~^^^^^^\n",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "xml.etree.ElementTree.ParseError: not well-formed (invalid token): line 1, column 0\n",
    "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/behave/model.py\", line 1329, in run\n    match.run(runner.context)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/behave/matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"src/bdd/wisp/steps/steps.py\", line 170, in user_fail_to_pay_RPT\n    steputils.send_primitive(context, actor, 'nodoInviaRPT')\n    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/pagopa-platform-integration-test/pagopa-platform-integration-test/src/utility/wisp/steps_utils.py\", line 42, in send_primitive\n    status_code, body_response, _ = utils.execute_request(url, 'post', headers, request, content_type,\n                                    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n                                                          description=req_description)\n                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/pagopa-platform-integration-test/pagopa-platform-integration-test/src/utility/wisp/utils.py\", line 38, in execute_request\n    object_response = xmlutils.fromstring(formatted_response)\n  File \"/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/xml/etree/ElementTree.py\", line 1342, in XML\n    parser.feed(text)\n    ~~~~~~~~~~~^^^^^^\n",
    "steps" : [ {
      "name" : "Given systems up",
      "time" : {
        "start" : 1750404202473,
        "stop" : 1750404203314,
        "duration" : 841
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Given a single RPT of type PO with 2 transfers of which 0 are stamps",
      "time" : {
        "start" : 1750404203314,
        "stop" : 1750404203315,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "When the user tries to pay the RPT on EC website but fails",
      "time" : {
        "start" : 1750404203315,
        "stop" : 1750404203773,
        "duration" : 458
      },
      "status" : "broken",
      "statusMessage" : "xml.etree.ElementTree.ParseError: not well-formed (invalid token): line 1, column 0\n",
      "statusTrace" : "  File \"/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/behave/model.py\", line 1329, in run\n    match.run(runner.context)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/site-packages/behave/matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"src/bdd/wisp/steps/steps.py\", line 170, in user_fail_to_pay_RPT\n    steputils.send_primitive(context, actor, 'nodoInviaRPT')\n    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/pagopa-platform-integration-test/pagopa-platform-integration-test/src/utility/wisp/steps_utils.py\", line 42, in send_primitive\n    status_code, body_response, _ = utils.execute_request(url, 'post', headers, request, content_type,\n                                    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n                                                          description=req_description)\n                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/pagopa-platform-integration-test/pagopa-platform-integration-test/src/utility/wisp/utils.py\", line 38, in execute_request\n    object_response = xmlutils.fromstring(formatted_response)\n  File \"/opt/hostedtoolcache/Python/3.13.5/x64/lib/python3.13/xml/etree/ElementTree.py\", line 1342, in XML\n    parser.feed(text)\n    ~~~~~~~~~~~^^^^^^\n",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "879c4290c0e331b2",
        "name" : "Step: [the user tries to pay the RPT on EC website but fails] - Sent request",
        "source" : "879c4290c0e331b2.txt",
        "type" : "text/plain",
        "size" : 8888
      }, {
        "uid" : "b99f2082603a61ee",
        "name" : "Step: [the user tries to pay the RPT on EC website but fails] - Received response",
        "source" : "b99f2082603a61ee.txt",
        "type" : "text/plain",
        "size" : 186
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 2,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    }, {
      "name" : "Then fails having invalid semantic validation due to incorrect RPT structure and getting the error PPT_SEMANTICA",
      "time" : {
        "start" : 1750404203774,
        "stop" : 1750404203774,
        "duration" : 0
      },
      "status" : "skipped",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 4,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "severity",
    "value" : "normal"
  }, {
    "name" : "tag",
    "value" : "nodo_invia_rpt"
  }, {
    "name" : "tag",
    "value" : "runnable"
  }, {
    "name" : "tag",
    "value" : "unhappy_path"
  }, {
    "name" : "feature",
    "value" : "User pays a single payment without stamps via nodoInviaRPT"
  }, {
    "name" : "framework",
    "value" : "behave"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "runnable", "nodo_invia_rpt", "unhappy_path" ]
  },
  "source" : "ae0afb2d4f79d7c2.json",
  "parameterValues" : [ ]
}