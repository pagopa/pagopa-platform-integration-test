{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Components","text":"<ul> <li>wisp</li> <li>ebollo</li> <li>fdr</li> <li>gpd</li> </ul>"},{"location":"components/ebollo/","title":"ebollo features:","text":""},{"location":"components/ebollo/#as-a-credit-institution-i-want-the-receipt-of-an-ebollo-paid-from-my-site-in-order-to-keep-track-of-the-information-associated-with-it","title":"As a Credit Institution I want the receipt of an eBollo paid from my site in order to keep track of the information associated with it","text":""},{"location":"components/ebollo/#as-a-credit-institution-i-want-to-be-notified-when-an-ebollo-is-paid-from-my-site-in-order-to-keep-track-of-the-information-associated-with-it","title":"As a Credit Institution I want to be notified when an eBollo is paid from my site in order to keep track of the information associated with it","text":""},{"location":"components/ebollo/#as-a-citizen-i-want-to-purchase-an-ebollo-to-access-a-document-that-requires-the-affixing-of-a-revenue-stamp","title":"As a citizen, I want to purchase an eBollo to access a document that requires the affixing of a revenue stamp","text":""},{"location":"components/ebollo/#allure-test-report","title":"Allure Test report","text":""},{"location":"components/fdr/","title":"fdr features:","text":""},{"location":"components/fdr/#showing-off-behave","title":"showing off behave","text":""},{"location":"components/fdr/#allure-test-report","title":"Allure Test report","text":""},{"location":"components/gpd/","title":"gpd features:","text":""},{"location":"components/gpd/#managing-a-debt-position","title":"Managing a debt position","text":""},{"location":"components/gpd/#paying-a-debt-position","title":"Paying a debt position","text":""},{"location":"components/gpd/#managing-a-debt-position_1","title":"Managing a debt position","text":""},{"location":"components/gpd/#managing-a-debt-position_2","title":"Managing a debt position","text":""},{"location":"components/gpd/#managing-a-debt-position_3","title":"Managing a debt position","text":""},{"location":"components/gpd/#retrieve-a-debt-position","title":"Retrieve a debt position","text":""},{"location":"components/gpd/#allure-test-report","title":"Allure Test report","text":""},{"location":"components/wisp/","title":"wisp features:","text":""},{"location":"components/wisp/#user-pays-a-single-payment-with-stamp-via-nodoinviarpt","title":"User pays a single payment with stamp via nodoInviaRPT","text":""},{"location":"components/wisp/#user-pays-a-single-payment-without-stamps-via-nodoinviarpt","title":"User pays a single payment without stamps via nodoInviaRPT","text":""},{"location":"components/wisp/#user-pays-a-single-payment-from-existing-payment-position-via-nodoinviarpt","title":"User pays a single payment from existing payment position via nodoInviaRPT","text":""},{"location":"components/wisp/#user-pays-a-multibeneficiary-payment-carts-on-nodoinviacarrellorpt","title":"User pays a multibeneficiary payment carts on nodoInviaCarrelloRPT","text":""},{"location":"components/wisp/#user-pays-a-payment-carts-from-existing-payment-position-via-nodoinviacarrellorpt","title":"User pays a payment carts from existing payment position via nodoInviaCarrelloRPT","text":""},{"location":"components/wisp/#user-pays-a-payment-carts-without-stamps-on-nodoinviacarrellorpt","title":"User pays a payment carts without stamps on nodoInviaCarrelloRPT","text":""},{"location":"components/wisp/#user-pays-a-payment-carts-with-stamps-on-nodoinviacarrellorpt","title":"User pays a payment carts with stamps on nodoInviaCarrelloRPT","text":""},{"location":"components/wisp/#allure-test-report","title":"Allure Test report","text":""},{"location":"components/ebollo/citizen_buys_ebollo/","title":"As a citizen, I want to purchase an eBollo to access a document that requires the affixing of a revenue stamp","text":""},{"location":"components/ebollo/citizen_buys_ebollo/#scenarios","title":"Scenarios:","text":"<ul> <li>A citizen successfully purchases an eBollo on the Creditor Institution's website when requesting access to documents</li> <li>A citizen cancels the payment of an eBollo on the Creditor Institution's website</li> <li>A citizen gets a generic error when purchasing an eBollo on the Creditor Institution's website</li> <li>A citizen gets a specific error when purchasing an eBollo on the Creditor Institution's website because the creation of a debt position failed</li> </ul>"},{"location":"components/ebollo/reporting_thorugh_API_call/","title":"As a Credit Institution I want the receipt of an eBollo paid from my site in order to keep track of the information associated with it","text":""},{"location":"components/ebollo/reporting_thorugh_API_call/#scenarios","title":"Scenarios:","text":"<ul> <li>A Creditor Institution requests a receipt of an eBollo</li> <li>A Creditor Institution requests a receipt of an eBollo that does not exist</li> </ul>"},{"location":"components/ebollo/reporting_through_broadcast_station/","title":"As a Credit Institution I want to be notified when an eBollo is paid from my site in order to keep track of the information associated with it","text":""},{"location":"components/ebollo/reporting_through_broadcast_station/#scenarios","title":"Scenarios:","text":"<ul> <li>A Creditor Institution receives a notification of the payment of an eBollo</li> </ul>"},{"location":"components/fdr/helloworld/","title":"showing off behave","text":""},{"location":"components/fdr/helloworld/#scenarios","title":"Scenarios:","text":"<ul> <li>run a simple test</li> <li>run a simple test 1</li> <li>run a simple test 2</li> <li>run a simple test 3</li> </ul>"},{"location":"components/gpd/debt-position-create-and-publish/","title":"Managing a debt position","text":""},{"location":"components/gpd/debt-position-create-and-publish/#scenarios","title":"Scenarios:","text":"<ul> <li>Debt position creation</li> <li>Debt action action with segregation codes check</li> </ul>"},{"location":"components/gpd/debt-position-manage/","title":"Managing a debt position","text":""},{"location":"components/gpd/debt-position-manage/#scenarios","title":"Scenarios:","text":"<ul> <li>Debt position creation</li> <li>Debt position filter list: exclusive param violation</li> <li>Debt position notification fee update by querying the node with existing positions</li> <li>Debt position manage with segregation codes check</li> </ul>"},{"location":"components/gpd/debt-position-multiple-create/","title":"Managing a debt position","text":""},{"location":"components/gpd/debt-position-multiple-create/#scenarios","title":"Scenarios:","text":"<ul> <li>Multiple Debt position creation</li> <li>Multiple Debt action action with segregation codes check</li> </ul>"},{"location":"components/gpd/debt-position-pay/","title":"Paying a debt position","text":""},{"location":"components/gpd/debt-position-pay/#scenarios","title":"Scenarios:","text":"<ul> <li>Pay Debt Position</li> <li>Debt Position Payability with a near validity date</li> </ul>"},{"location":"components/gpd/debt-position-retrieval/","title":"Retrieve a debt position","text":""},{"location":"components/gpd/debt-position-retrieval/#scenarios","title":"Scenarios:","text":"<ul> <li>Get Debt Position by IUV</li> </ul>"},{"location":"components/gpd/debt-position-update-and-publish/","title":"Managing a debt position","text":""},{"location":"components/gpd/debt-position-update-and-publish/#scenarios","title":"Scenarios:","text":"<ul> <li>Debt position creation</li> <li>Update IBAN on all Organization's Transfers of updatable debt position</li> </ul>"},{"location":"components/wisp/nodoInviaCarrelloRPT_existingPaymentPosition/","title":"User pays a payment carts from existing payment position via nodoInviaCarrelloRPT","text":""},{"location":"components/wisp/nodoInviaCarrelloRPT_existingPaymentPosition/#scenarios","title":"Scenarios:","text":"<ul> <li>User pays a cart with single RPT without stamp that exists already in GPD</li> <li>User pays a cart with single RPT with multiple transfers that exists already in GPD</li> <li>Scenario: User pays a cart with single RPT with one stamp that exists already in GPD</li> <li>User pays a cart with two RPTs without stamp of which one already exists in GPD</li> <li>User pays a cart with two RPTs with multiple transfers that exists already in GPD</li> <li>Scenario: User pays a cart with two RPTs with at least on stamp that exists already in GPD</li> <li>User tries to pay a cart with single RPT that exists already in GPD in invalid state</li> <li>User tries to pay a cart with single RPT that was inserted from ACA and is in valid state</li> <li>User tries to pay a cart with single RPT that was inserted from ACA and is in invalid state</li> <li>User tries to pay a cart with two RPTs that exists already in GPD in invalid state</li> <li>User tries to pay a cart with two RPTs that was inserted from ACA and is in valid state</li> <li>User tries to pay a cart with two RPTs that was inserted from ACA and is in invalid state</li> <li>User tries to pay a multibeneficiary cart that exists already in GPD in invalid state</li> <li>User tries to pay a multibeneficiary cart that was inserted from ACA and is in valid state</li> <li>User tries to pay a multibeneficiary cart that was inserted from ACA and is in invalid state</li> <li>User pays a multibeneficiary cart that exists already in GPD</li> </ul>"},{"location":"components/wisp/nodoInviaCarrelloRPT_multibeneficiary/","title":"User pays a multibeneficiary payment carts on nodoInviaCarrelloRPT","text":""},{"location":"components/wisp/nodoInviaCarrelloRPT_multibeneficiary/#scenarios","title":"Scenarios:","text":"<ul> <li>User pays a multibeneficiary cart with two RPTs with a total of two transfers</li> <li>User pays a multibeneficiary cart with two RPTs with a total of three transfers</li> <li>User pays a multibeneficiary cart with two RPTs with a total of four transfers</li> <li>User pays a multibeneficiary cart with two RPTs with a total of five transfers</li> <li>User tries to pay a multibeneficiary cart with two RPTs with a total of six transfers, but the cart has more than 5 transfers</li> <li>User tries to pay a multibeneficiary cart with three RPTs with one transfer each one, but the cart has more than 2 RPT</li> <li>User tries to pay a multibeneficiary cart with two RPTs, on which the second has two transfers, but the second RPT contains more than one transfers</li> <li>User tries to pay a multibeneficiary cart with two RPTs with a stamp, but it fails because one RPT has the stamp</li> </ul>"},{"location":"components/wisp/nodoInviaCarrelloRPT_noStamp/","title":"User pays a payment carts without stamps on nodoInviaCarrelloRPT","text":""},{"location":"components/wisp/nodoInviaCarrelloRPT_noStamp/#scenarios","title":"Scenarios:","text":"<ul> <li>User pays a cart with single RPT with one transfer</li> <li>User pays a cart with single RPT with two transfers</li> <li>User pays a cart with single RPT with three transfers</li> <li>User pays a cart with single RPT with four transfers</li> <li>User pays a cart with single RPT with five transfers</li> <li>User pays a cart with three RPTs with one transfer each one</li> <li>User pays a cart with four RPTs with one transfer each one</li> <li>User pays a cart with five RPTs with one transfer each one</li> <li>User pays a cart with two RPTs with a total of five transfers</li> <li>User pays a cart with three RPTs with a total of five transfers</li> <li>User pays a cart with three RPTs with a total of ten transfers</li> <li>User pays a cart with two RPTs on WFESP flow</li> <li>User tries to pay a cart with two RPTs but the payment closure fails, then tries again successfully</li> <li>User tries to pay a cart with one RPT that has a quantity of transfers above the limit</li> <li>User tries to pay a cart with two RPT that has a quantity of transfers above the limit</li> <li>User tries to pay a cart with two RPTs but the payment closure fails</li> </ul>"},{"location":"components/wisp/nodoInviaCarrelloRPT_withStamp/","title":"User pays a payment carts with stamps on nodoInviaCarrelloRPT","text":""},{"location":"components/wisp/nodoInviaCarrelloRPT_withStamp/#scenarios","title":"Scenarios:","text":"<ul> <li>User pays a cart with single RPT no simple transfer and one stamp</li> <li>User pays a cart with single RPT one simple transfer and one stamp</li> <li>User pays a cart with single RPT two simple transfer and one stamp</li> <li>User pays a cart with two RPTs, both with no simple transfer and one stamp</li> <li>User pays a cart with two RPTs, both with one simple transfer and one stamp</li> <li>User pays a cart with two RPTs, with different quantity of simple transfer and stamps</li> <li>User pays a cart with three RPTs, with different quantity of simple transfer and stamps</li> <li>User tries to pay a cart with one RPT that has a quantity of transfers and stamps above the limit</li> <li>User tries to pay a cart with two RPTs that has a quantity of transfers and stamps above the limit</li> </ul>"},{"location":"components/wisp/nodoInviaRPT_existingPaymentPosition/","title":"User pays a single payment from existing payment position via nodoInviaRPT","text":""},{"location":"components/wisp/nodoInviaRPT_existingPaymentPosition/#scenarios","title":"Scenarios:","text":"<ul> <li>User pays a single payment with single transfer and no stamp that exists already in GPD</li> <li>User pays a single payment with no transfer and one stamp that exists already in GPD</li> <li>User pays a single payment with single transfer and one stamp that exists already in GPD</li> <li>User tries to pay a single payment with single transfer and no stamp that exists already in GPD in invalid state</li> <li>User tries to pay a single payment that was inserted from ACA and is in valid state</li> <li>User tries to pay a single payment that was inserted from ACA and is in invalid state</li> </ul>"},{"location":"components/wisp/nodoInviaRPT_noStamp/","title":"User pays a single payment without stamps via nodoInviaRPT","text":""},{"location":"components/wisp/nodoInviaRPT_noStamp/#scenarios","title":"Scenarios:","text":"<ul> <li>User pays a single payment with single transfer and no stamp</li> <li>User pays a single payment with two transfers and no stamp</li> <li>User pays a single payment with three transfers and no stamp</li> <li>User pays a single payment with four transfers and no stamp</li> <li>User pays a single payment with five transfers and no stamp</li> <li>User pays a single payment as PO type with one transfer and no stamp</li> <li>User pays a single payment as PO type with two transfer and no stamp</li> <li>User executes a first redirect, then execute the redirection again and complete the payment flow</li> <li>User tries two time to pay the same RPT but the conversion to the new model fails</li> <li>User tries the payment, then retries again the flow but fails</li> </ul>"},{"location":"components/wisp/nodoInviaRPT_withStamp/","title":"User pays a single payment with stamp via nodoInviaRPT","text":""},{"location":"components/wisp/nodoInviaRPT_withStamp/#scenarios","title":"Scenarios:","text":"<ul> <li>User pays a single payment with no simple transfer and one stamp</li> <li>User pays a single payment with one simple transfer and one stamp</li> <li>User pays a single payment with two simple transfer and one stamp</li> <li>User pays a single payment with two simple transfer and two stamp</li> <li>User pays a single payment as PO type with no simple transfer and one stamp</li> <li>User pays a single payment as PO type with one simple transfer and one stamp, but fails the semantic validation</li> </ul>"}]}