name: Run Integration Tests and Publish Reports

on:
  schedule:
    - cron: '0 1 * * *' # Eseguito ogni giorno alle 01:00 UTC
  workflow_dispatch:
    inputs:
      environment:
        description: "Select the target environment"
        required: true
        default: uat
        type: choice
        options:
          - dev
          - uat
      WISP:
        type: boolean
        description: Run WISP dismantling tests
        required: false
        default: true
      FdR:
        type: boolean
        description: Run Flussi di Rendicontazione tests
        required: false
        default: true

jobs:
  WISP_integration_tests:
    runs-on: ubuntu-latest
    if: github.event.inputs.WISP == 'true' || !github.event.inputs.WISP
    outputs:
      wisp_success: ${{ steps.run_tests.outcome }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 17
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          sudo apt-get install -y jq
      - name: Load secrets
        run: echo "$SECRETS" >> ./config/.secrets.yaml
        env:
          SECRETS: ${{ secrets.INTEGRATION_TESTS_SECRETS }}
      - name: Run tests with Behave (WISP)
        id: run_tests
        continue-on-error: true
        run: |
          behave src/bdd/wisp --tags=@runnable --format allure_behave.formatter:AllureFormatter -o allure-results --junit-directory=junit --junit --summary --show-timings -v
      - name: Load previous allure history
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages
      - name: Build WISP Allure report
        uses: simple-elf/allure-report-action@v1
        with:
          gh_pages: gh-pages
          allure_results: allure-results
          allure_report: allure-report
          allure_history: allure-history/wisp-tests
          subfolder: wisp-tests
          keep_reports: 30

  FdR_integration_tests:
    runs-on: ubuntu-latest
    if: github.event.inputs.FdR == 'true' || !github.event.inputs.FdR
    outputs:
      fdr_success: ${{ steps.run_tests.outcome }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 17
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          sudo apt-get install -y jq
      - name: Run tests with Behave (FdR)
        id: run_tests
        continue-on-error: true
        run: |
          behave src/bdd/fdr --tags=@runnable --format allure_behave.formatter:AllureFormatter -o allure-results --junit-directory=junit --junit --summary --show-timings -v
      - name: Load previous allure history
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages
      - name: Build FdR Allure report
        uses: simple-elf/allure-report-action@v1
        with:
          gh_pages: gh-pages
          allure_results: allure-results
          allure_report: allure-report
          allure_history: allure-history/fdr-tests
          subfolder: fdr-tests
          keep_reports: 30

  deploy:
    needs: [WISP_integration_tests, FdR_integration_tests]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Checkout gh-pages
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: public

      - name: Create timestamp folder names
        id: vars
        run: echo "timestamp=$(date +'%Y-%m-%d-%Hh%M')" >> $GITHUB_ENV

      - name: Copy WISP report
        run: |
          mkdir -p public/wisp-tests/${{ env.timestamp }}
          cp -r allure-history/wisp-tests/. public/wisp-tests/${{ env.timestamp }}/

      - name: Copy FdR report
        run: |
          mkdir -p public/fdr-tests/${{ env.timestamp }}
          cp -r allure-history/fdr-tests/. public/fdr-tests/${{ env.timestamp }}/

      - name: Update WISP index
        run: |
          mkdir -p public/wisp-tests
          echo '<html><body><h1>Storico WISP</h1><ul>' > public/wisp-tests/index.html
          for dir in $(ls -dt public/wisp-tests/*/ | grep -v '/index.html' | head -n 30); do
            d=$(basename $dir)
            echo "<li><a href=\"./$d/index.html\">$d</a></li>" >> public/wisp-tests/index.html
          done
          echo '</ul></body></html>' >> public/wisp-tests/index.html

      - name: Update FdR index
        run: |
          mkdir -p public/fdr-tests
          echo '<html><body><h1>Storico FdR</h1><ul>' > public/fdr-tests/index.html
          for dir in $(ls -dt public/fdr-tests/*/ | grep -v '/index.html' | head -n 30); do
            d=$(basename $dir)
            echo "<li><a href=\"./$d/index.html\">$d</a></li>" >> public/fdr-tests/index.html
          done
          echo '</ul></body></html>' >> public/fdr-tests/index.html

      - name: Copy Landing page
        run: |
          cp landing-page/index.html public/index.html
          touch public/.nojekyll

      - name: Publish to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: public